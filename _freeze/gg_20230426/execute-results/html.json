{
  "hash": "ddb75d095092cfd74dc5bc2683bf3fbc",
  "result": {
    "markdown": "---\ntitle: \"chatGPT\"\nsubtitle: \"경기도 직무교육(4/26~28)\"\nauthor:\n  - name: 이광춘\n    url: https://www.linkedin.com/in/kwangchunlee/\n    affiliation: 한국 R 사용자회\n    affiliation-url: https://github.com/bit2r\n  - name: 신종화\n    url: https://modernity.tistory.com/\n    affiliation: 한국 R 사용자회\n    affiliation-url: https://github.com/bit2r\ndate: \"2023-04-26\"\ntitle-block-banner: true\n#title-block-banner: \"#562457\"\nformat:\n  html:\n    css: css/quarto.css\n    theme: flatly\n    code-fold: true\n    code-overflow: wrap\n    toc: true\n    toc-depth: 3\n    toc-title: 목차\n    number-sections: true\n    highlight-style: github    \n    self-contained: false\nfilters:\n   - lightbox\nlightbox: auto\nlink-citations: true\nknitr:\n  opts_chunk: \n    message: false\n    warning: false\n    collapse: true\n    comment: \"#>\" \n    R.options:\n      knitr.graphics.auto_pdf: true\neditor_options: \n  chunk_output_type: console\neditor: \n  markdown: \n    wrap: 72\n---\n\n```{mermaid}\nflowchart LR\n   subgraph 주 강의범위\n    A[강의 PPT] --> AB[\"글쓰기<br>(write)\"] --> B[실습: <br> 개회사 등]\n    A[강의 PPT] --> AC[\"그리기<br>(draw)\"] --> C[그리기: <br> 이미지 작성자 등]\n    A[강의 PPT] --> AD[\"코딩<br>(code)\"] --> D[실습: <br> 엑셀 등]\n    end\n    subgraph 부 강의범위\n    A[강의 PPT] -.-> AE[\"추론<br>(code)\"] -.-> E[실습: <br> 수능 등]\n    end\n    B --> F[\"심화(선택)\"]\n    C --> F[\"심화(선택)\"]\n    D --> F[\"심화(선택)\"]\n    E -.-> F[\"심화(선택)\"]\n\nclick A href \"https://r2bit.com/bitSlide/slideshow/202304-gpt/#/title-slide\"\nclick AB href \"https://r2bit.com/chatGPT/prompt_in_practice.html\"\nclick F href \"https://r2bit.com/chatGPT/\"\n\nclass A nodeStyle\nclass AB,AC,AD,AE theoryStyle\nclass B,C,D,E practiceStyle\nclass F taskStyle\n\nclassDef nodeStyle fill:#93c47d,stroke:#000000,stroke-width:0.7px,font-weight:bold,font-size:14px;\nclassDef theoryStyle fill:#f59542,stroke:#000000,stroke-width:0.7px,font-weight:bold,font-size:14px;\nclassDef practiceStyle fill:#4287f5,stroke:#000000,stroke-width:0.7px,font-weight:bold,font-size:14px;\nclassDef taskStyle fill:#42f548,stroke:#000000,stroke-width:0.7px,font-weight:bold,font-size:12px;\n```\n\n\n\n# 기계가 학습을 정말(?)\n\n[Code.org](https://code.org/)는 모든 학교의 모든 학생이 초중고 핵심 교육의 일환으로 컴퓨터 과학을 배울 수 있는 기회를 갖는다는 비전에 전념하는 교육 혁신 비영리 단체로 젊은 여성과 기타 소외 계층의 학생 참여를 늘리는 데 중점을 두고 학교에서 컴퓨터 과학에 대한 접근성을 확대하고 있다.\n\n[Code.org](https://code.org/)에서 제작한 인공지능 교육 사례를 살펴보고 다음 심화과정으로 넘어가자\n\n- [AI: Is this a fish?](https://studio.code.org/s/oceans/lessons/1/levels/2)\n\n\n# AI 모형 개발\n\n[티처블 머신(teachable machine)](https://teachablemachine.withgoogle.com/)을 사용하면 로컬 컴퓨터에 \n별다른 설치없이 기계학습(AI 인공지능) 모형을 개발하는 것은 물론 서비스로 출시도 가능하다.\n\n\n```{mermaid}\nflowchart LR\n  A[데이터셋] --> B(기계학습 <br> 훈련)\n  B --> C[배포]\n  C --> D[추론]\n  \n  style A fill:#9fe6a0,stroke:#333,stroke-width:2px;\n  style B fill:#80c1ff,stroke:#333,stroke-width:2px;\n  style C fill:#ffa080,stroke:#333,stroke-width:2px;\n  style D fill:#f7ddbb,stroke:#333,stroke-width:2px;  \n```\n\n\n## 문제가 어려운 이유\n\n기계학습(AI) 모형을 개발할 때 가장 중요한 것이 데이터셋이다.\n과거 AI 모형은 강아지 그림과 고양이 그림을 잘 구별하지 못하였다. \n하지만 2010년 전후로 새로운 인공지능 기술이 개발되면서 이런 문제는 자연히 \n해결되고 더 나아가 커다란 변혁이 일어났다.\n\n\n:::{#fig-dogs layout-ncol=3}\n\n![양치기 강아지와 마대자루 걸레](images/dog-food-comparison-bagel-muffin-lookalike-teenybiscuit-karen-zack-6__700.jpg)\n\n![치와와 강아지와 머핀](images/dog-food-comparison-bagel-muffin-lookalike-teenybiscuit-karen-zack-7__700.jpg)\n\n![강아지와 베이글 빵](images/dog-food-comparison-bagel-muffin-lookalike-teenybiscuit-karen-zack__700.jpg)\n\n출처: [Puppies Or Food? 12 Pics That Will Make You Question Reality](https://www.boredpanda.com/dog-food-comparison-bagel-muffin-lookalike-teenybiscuit-karen-zack)\n:::\n\n## 데이터셋\n\nZenodo [Cats and Dogs sample](https://zenodo.org/record/5226945#.ZDSZ03ZBwuU) 데이터셋은 [캐글 고양이와 개 데이터셋](https://www.kaggle.com/c/dogs-vs-cats/data)에서 추출한 소규모 개와 고양이 데이터셋으로 훈련 세트용 이미지 1000개(고양이 500개, 개 500개)와 테스트 세트용 이미지 400개(각각 200개)가 포함되어 있다.\n\n다운로드 받은 데이터셋을 로컬 컴퓨터에서 압축을 푼다.\n고양이와 강아지 사진을 윈도우즈 탐색기를 사용해서 살펴본다.\n\n## 훈련\n\n데이터에서 구분된 고양이와 강아지를 이미지를 각각 범주에 넣고 학습버튼을 눌러 학습을 완료시킨다.\n필요한 경우 웹캠 혹은 고양이, 강아지 이미지를 구해 출력값이 제대로 나오는지 점검한다.\n\n![](images/cats_dogs_training.jpg)\n\n## 배포\n\n[[고양이와 강아지 사진 분류 서비스](https://teachablemachine.withgoogle.com/models/WDOR30DkZ/)]{.aside}\n\n우측 **미리보기** **모델 내보내기** 버튼을 눌러 모형을 내보낸다.\n\"공유 가능한 링크\"의 복사 버튼을 클릭하면 웹 브라우져에서 접속이 가능한 URL이 생성되어 이를 공유한다.\n\n![](images/cats_dogs_deploy.jpg)\n\n## 실습\n\n:::{.callout-note collapse=\"true\"}\n### 치와와 강아지와 머핀을 구분하는 인공지능 모형을 만드세요\n\n1. 캐글 [chihuahua or muffin](https://www.kaggle.com/datasets/returnofsputnik/chihuahua-or-muffin) 데이터셋 다운로드\n1. [teachable machine](https://teachablemachine.withgoogle.com/) 웹사이트 접속\n1. 치와와 강아지와 머핀을 구분하는 기계학습 모형 개발\n    - 치와와 강아지 이미지 (`test` 폴더)\n    - 머핀 이미지 (`test` 폴더)\n1. 개발완료 후 웹링크 배포하여 공유\n:::\n\n# 챗GPT 보안사고\n\n- [정두용 (2023-03-30), \"우려가 현실로…삼성전자, 챗GPT 빗장 풀자마자 ‘오남용’ 속출\", 이코노미스트](https://economist.co.kr/article/view/ecn202303300057)\n\n> 삼성전자 DS 부문 임직원 A씨는 **반도체 설비 계측 데이터베이스(DB)** 다운로드 프로그램의 소스 코드를 실행 중 오류를 확인했다. 문제가 된 소스 코드 전부를 복사해 챗GPT에 입력, 해결 방법을 문의했다. 삼성전자 설비 계측과 관련한 소스 코드가 오픈AI 학습 데이터로 입력된 셈이다.\n\n> 임직원 B씨는 수율·불량 설비 파악을 위해 작성한 **프로그램 코드**를 챗GPT에 입력하는 사고를 냈다. 관련 소스 전체를 챗GPT에 입력하고 코드 최적화를 요청했다. 임직원 C씨는 스마트폰으로 녹음한 회의 내용을 **네이버 클로바 애플리케이션(앱)**을 통해 문서 파일로 변환한 뒤 챗GPT에 입력했다. 회의록 작성 요청이 목적이다.\n\n\n- [민재용 (2023.04.02), \"이탈리아도 챗GPT '차단'...서방 국가중 처음\", 한국일보](https://m.hankookilbo.com/News/Read/A2023040208490005108)\n\n> 로이터 통신 등에 따르면 이탈리아 데이터 보호청은 \"챗GPT가 이탈리아의 개인정보 보호 기준과 규정을 충족할 때까지 서비스 접속을 일시적으로 차단할 것\"이라고 밝혔다.\n\n> 접속 차단 이유는 개인정보 침해 우려 때문이다. 이탈리아 당국은 챗GPT가 알고리즘 학습을 이유로, 개인정보를 대량으로 수집하고 저장하는 행위를 정당화할 법적 근거가 없다고 지적했다. 보호청은 챗GPT 개발사 오픈AI가 20일 이내에 해결책을 내놓지 않으면 전 세계 매출액의 최대 4%에 달하는 벌금을 물게 될 것이라고 경고하기도 했다.\n\n# 챗GPT 글쓰기\n\n- [바로가기](gg_20230426_write.html)\n\n# 챗GPT 그리기\n\n- [바로가기](gg_20230426_draw.html)\n\n# 챗GPT 코딩\n\n- [바로가기](gg_20230426_excel.html)\n\n# 사례분석\n\n- 오피스 전쟁: [마이크로소프트 오피스](https://r2bit.com/chatGPT/office.html)\n- 사례 분석: [AI부상과 일자리의 변화](https://r2bit.com/bitSlide/slideshow/202304-gpt/#/%ED%95%9C%EA%B3%84-limit)\n\n\n\n\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}